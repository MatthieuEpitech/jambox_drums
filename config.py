note = ['C','C#','D','D#','E','F','F#','G','G#','A','A#','B']
octave = [i for i in range(-1, 10)]
indice = [
        [0  , 1 ,2,	3,	4,	5,	6,	7,	8,	9,	10,	11],
        [12,13,	14,	15,	16,	17,	18,	19,	20,	21,	22,	23],
        [24,25,	26,	27,	28,	29,	30,	31,	32,	33,	34,	35],
        [36,37,	38,	39,	40,	41,	42,	43,	44,	45,	46,	47],
        [48,49,	50,	51,	52,	53,	54,	55,	56,	57,	58,	59],
        [60,61,	62,	63,	64,	65,	66,	67,	68,	69,	70,	71],
        [72,73,	74,	75,	76,	77,	78,	79,	80,	81,	82,	83],
        [84,85,	86,	87,	88,	89,	90,	91,	92,	93,	94,	95],
        [96,97,	98,	99,	100,101,102,103,104,105,106,107],
        [108,109,110,111,112,113,114,115,116,117,118,119],
        [120,121,122,123,124,125,126,127]
    ]

# Code midi: (Vrai note, octave)
NOTE = {
    0: ('C', -1),
    1: ('C#', -1),
    2: ('D', -1),
    3: ('D#', -1),
    4: ('E', -1),
    5: ('F', -1),
    6: ('F#', -1),
    7: ('G', -1),
    8: ('G#', -1),
    9: ('A', -1),
    10: ('A#', -1),
    11: ('B', -1),
    12: ('C', 0),
    13: ('C#', 0),
    14: ('D', 0),
    15: ('D#', 0),
    16: ('E', 0),
    17: ('F', 0),
    18: ('F#', 0),
    19: ('G', 0),
    20: ('G#', 0),
    21: ('A', 0),
    22: ('A#', 0),
    23: ('B', 0),
    24: ('C', 1),
    25: ('C#', 1),
    26: ('D', 1),
    27: ('D#', 1),
    28: ('E', 1),
    29: ('F', 1),
    30: ('F#', 1),
    31: ('G', 1),
    32: ('G#', 1),
    33: ('A', 1),
    34: ('A#', 1),
    35: ('B', 1),
    36: ('C', 2),
    37: ('C#', 2),
    38: ('D', 2),
    39: ('D#', 2),
    40: ('E', 2),
    41: ('F', 2),
    42: ('F#', 2),
    43: ('G', 2),
    44: ('G#', 2),
    45: ('A', 2),
    46: ('A#', 2),
    47: ('B', 2),
    48: ('C', 3),
    49: ('C#', 3),
    50: ('D', 3),
    51: ('D#', 3),
    52: ('E', 3),
    53: ('F', 3),
    54: ('F#', 3),
    55: ('G', 3),
    56: ('G#', 3),
    57: ('A', 3),
    58: ('A#', 3),
    59: ('B', 3),
    60: ('C', 4),
    61: ('C#', 4),
    62: ('D', 4),
    63: ('D#', 4),
    64: ('E', 4),
    65: ('F', 4),
    66: ('F#', 4),
    67: ('G', 4),
    68: ('G#', 4),
    69: ('A', 4),
    70: ('A#', 4),
    71: ('B', 4),
    72: ('C', 5),
    73: ('C#', 5),
    74: ('D', 5),
    75: ('D#', 5),
    76: ('E', 5),
    77: ('F', 5),
    78: ('F#', 5),
    79: ('G', 5),
    80: ('G#', 5),
    81: ('A', 5),
    82: ('A#', 5),
    83: ('B', 5),
    84: ('C', 6),
    85: ('C#', 6),
    86: ('D', 6),
    87: ('D#', 6),
    88: ('E', 6),
    89: ('F', 6),
    90: ('F#', 6),
    91: ('G', 6),
    92: ('G#', 6),
    93: ('A', 6),
    94: ('A#', 6),
    95: ('B', 6),
    96: ('C', 7),
    97: ('C#', 7),
    98: ('D', 7),
    99: ('D#', 7),
    100: ('E', 7),
    101: ('F', 7),
    102: ('F#', 7),
    103: ('G', 7),
    104: ('G#', 7),
    105: ('A', 7),
    106: ('A#', 7),
    107: ('B', 7),
    108: ('C', 8),
    109: ('C#', 8),
    110: ('D', 8),
    111: ('D#', 8),
    112: ('E', 8),
    113: ('F', 8),
    114: ('F#', 8),
    115: ('G', 8),
    116: ('G#', 8),
    117: ('A', 8),
    118: ('A#', 8),
    119: ('B', 8),
    120: ('C', 9),
    121: ('C#', 9),
    122: ('D', 9),
    123: ('D#', 9),
    124: ('E', 9),
    125: ('F', 9),
    126: ('F#', 9),
    127: ('G', 9)
}

# Frequence des notes
frequence = [
    ('C', 0, 16.35),
    ('C', 1, 32.7),
    ('C', 2, 65.4),
    ('C', 3, 130.8),
    ('C', 4, 261.6),
    ('C', 5, 523.2),
    ('C', 6, 1046.4),
    ('C', 7, 2092.8),
    ('C', 8, 4185.6),
    ('C#', 0, 17.32),
    ('C#', 1, 34.6),
    ('C#', 2, 69.3),
    ('C#', 3, 138.6),
    ('C#', 4, 277.1),
    ('C#', 5, 554.2),
    ('C#', 6, 1108.5),
    ('C#', 7, 2217.0),
    ('D', 0, 18.35),
    ('D', 1, 36.7),
    ('D', 2, 73.4),
    ('D', 3, 146.8),
    ('D', 4, 293.6),
    ('D', 5, 587.2),
    ('D', 6, 1174.4),
    ('D', 7, 2348.8),
    ('D#', 0, 19.45),
    ('D#', 1, 38.9),
    ('D#', 2, 77.8),
    ('D#', 3, 155.6),
    ('D#', 4, 311.2),
    ('D#', 5, 622.4),
    ('D#', 6, 1244.8),
    ('D#', 7, 2489.6),
    ('E', 0, 20.6),
    ('E', 1, 41.2),
    ('E', 2, 82.4),
    ('E', 3, 164.8),
    ('E', 4, 329.6),
    ('E', 5, 659.2),
    ('E', 6, 1318.4),
    ('E', 7, 2636.8),
    ('F', 0, 21.83),
    ('F', 1, 43.7),
    ('F', 2, 87.3),
    ('F', 3, 174.6),
    ('F', 4, 349.3),
    ('F', 5, 698.6),
    ('F', 6, 1397.1),
    ('F', 7, 2794.2),
    ('F#', 0, 23.12),
    ('F#', 1, 46.2),
    ('F#', 2, 92.5),
    ('F#', 3, 185.0),
    ('F#', 4, 369.9),
    ('F#', 5, 739.8),
    ('F#', 6, 1479.7),
    ('F#', 7, 2959.4),
    ('G', 0, 24.5),
    ('G', 1, 49.0),
    ('G', 2, 98.0),
    ('G', 3, 196.0),
    ('G', 4, 392.0),
    ('G', 5, 784.0),
    ('G', 6, 1568.0),
    ('G', 7, 3136.0),
    ('G#', 0, 25.96),
    ('G#', 1, 51.9),
    ('G#', 2, 103.8),
    ('G#', 3, 207.7),
    ('G#', 4, 415.4),
    ('G#', 5, 830.7),
    ('G#', 6, 1661.4),
    ('G#', 7, 3322.9),
    ('A', 0, 27.5),
    ('A', 1, 55.0),
    ('A', 2, 110.0),
    ('A', 3, 220.0),
    ('A', 4, 440.0),
    ('A', 5, 880.0),
    ('A', 6, 1760.0),
    ('A', 7, 3520.0),
    ('A#', 0, 29.14),
    ('A#', 1, 58.3),
    ('A#', 2, 116.6),
    ('A#', 3, 233.1),
    ('A#', 4, 466.2),
    ('A#', 5, 932.5),
    ('A#', 6, 1865.0),
    ('A#', 7, 3729.9),
    ('B', 0, 30.87),
    ('B', 1, 61.7),
    ('B', 2, 123.5),
    ('B', 3, 247.0),
    ('B', 4, 493.9),
    ('B', 5, 987.8),
    ('B', 6, 1975.7),
    ('B', 7, 3951.4)
]

default_header = [
    {'type': 'program_change', 'time': 0, 'program': 32, 'channel': 8}
    #{'type': 'pitchwheel', 'pitch': 1000, 'time': 10}
    # {'type': 'control_change', 'time': 0, 'control': 7, 'value': 127, 'channel': 0},
    # {'type': 'control_change', 'time': 0, 'control': 1, 'value': 0, 'channel': 0},
    # {'type': 'control_change', 'time': 0, 'control': 10, 'value': 44, 'channel': 0},
    # {'type': 'control_change', 'time': 0, 'control': 121, 'value': 0, 'channel': 0}
]

default_header_guiatre = [
    {'type': 'program_change', 'time': 0, 'program': 27, 'channel': 1}
    #{'type': 'pitchwheel', 'pitch': 1000, 'time': 10}
    # {'type': 'control_change', 'time': 0, 'control': 7, 'value': 127, 'channel': 0},
    # {'type': 'control_change', 'time': 0, 'control': 1, 'value': 0, 'channel': 0},
    # {'type': 'control_change', 'time': 0, 'control': 10, 'value': 44, 'channel': 0},
    # {'type': 'control_change', 'time': 0, 'control': 121, 'value': 0, 'channel': 0}
]

# Frequence en note
def frequence_to_note(freq, output_midi=False):
    if (output_midi):
        return note_to_midi(min(frequence, key=lambda x: abs(x[2] - freq))[:2])
    else:
        return min(frequence, key=lambda x: abs(x[2] - freq))[:2]

# code midi en vrai note
def midi_to_note(note):
    return NOTE[note]

# vrai note en code midi
def note_to_midi(mid):
    return [i for i, j in NOTE.items() if j == mid][0]